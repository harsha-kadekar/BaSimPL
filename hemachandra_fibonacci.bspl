FUNCT_BEGIN_hemachandra_fibonacci:
ALOC LCB.val
LEA A0,1(FP)
POP D0
MOV (A0),D0
ALOC LCB.x1
ALOC LCB.x2
ALOC LCB.next
ALOC LCB.count
MOVI D0,0
PUSH D0
LEA A0,5(FP)
POP D0
MOV (A0),D0
MOVI D0,1
PUSH D0
LEA A0,6(FP)
POP D0
MOV (A0),D0
MOVI D0,0
PUSH D0
LEA A0,7(FP)
POP D0
MOV (A0),D0
MOVI D0,0
PUSH D0
LEA A0,8(FP)
POP D0
MOV (A0),D0
WHILE_BEGIN_2:
LEA A0,8(FP)
MOV D0,(A0)
PUSH D0
LEA A0,1(FP)
MOV D0,(A0)
PUSH D0
POP D1
POP D0
CLT D0,D1
PUSH D0
POP D0
BNE WHILE_END_1
LEA A0,8(FP)
MOV D0,(A0)
PUSH D0
MOVI D0,0
PUSH D0
POP D1
POP D0
CEQ D0,D1
PUSH D0
POP D0
BNE IF_END_3
LEA A0,5(FP)
MOV D0,(A0)
PUSH D0
POP D0
OUT D0
JMP ELSE_END_4
IF_END_3:
LEA A0,8(FP)
MOV D0,(A0)
PUSH D0
MOVI D0,1
PUSH D0
POP D1
POP D0
CEQ D0,D1
PUSH D0
POP D0
BNE IF_END_5
LEA A0,6(FP)
MOV D0,(A0)
PUSH D0
POP D0
OUT D0
JMP ELSE_END_6
IF_END_5:
LEA A0,5(FP)
MOV D0,(A0)
PUSH D0
LEA A0,6(FP)
MOV D0,(A0)
PUSH D0
POP D1
POP D0
ADD D0,D1
PUSH D0
LEA A0,7(FP)
POP D0
MOV (A0),D0
LEA A0,6(FP)
MOV D0,(A0)
PUSH D0
LEA A0,5(FP)
POP D0
MOV (A0),D0
LEA A0,7(FP)
MOV D0,(A0)
PUSH D0
LEA A0,6(FP)
POP D0
MOV (A0),D0
LEA A0,7(FP)
MOV D0,(A0)
PUSH D0
POP D0
OUT D0
ELSE_END_6:
ELSE_END_4:
LEA A0,8(FP)
MOV D0,(A0)
PUSH D0
MOVI D0,1
PUSH D0
POP D1
POP D0
ADD D0,D1
PUSH D0
LEA A0,8(FP)
POP D0
MOV (A0),D0
JMP WHILE_BEGIN_2
WHILE_END_1:
ret
FUNCT_BEGIN_main:
ALOC LCB.x
LEA A0,126(FP)
IN D0
MOV (A0),D0
LEA A0,126(FP)
MOV D0,(A0)
PUSH D0
CALL hemachandra_fibonacci 0
ret
