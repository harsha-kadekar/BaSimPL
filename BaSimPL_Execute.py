# Name: BaSimPL_Execute
# Description: This file will hold all the functions to execute the compiler and interpreter of
#              'Basic Simple Programming Language' (BaSimPL). It will also have functions to text it.

import sys
import BaSimPL_Lexxer as Lex
import BaSimPL_Compiler as CC
import BaSimPL_Parser as par
import BaSimPL_Interpreter as interep
import BaSimPL_DummyRuntime as runTime

def Lexxer_Tester(text_of_program):
    lexAnalysis = Lex.Lexxer(text_of_program)
    lexAnalysis.generate_Tokens()
    for tok in lexAnalysis.List_Of_Generated_Tokens:
        print tok

def Parser_Tester(text_of_program):
    parser = par.Parser()
    lexAnalysis = Lex.Lexxer(text_of_program)
    lexAnalysis.generate_Tokens()
    parser.List_Of_Tokens = lexAnalysis.List_Of_Generated_Tokens
    parser.ParseIt()
    for line in parser._IntermediateCode:
        print line

def Compiler_Tester(file_name):
    Basimplcc = CC.Compiler(file_name)
    Basimplcc.DebugState = 1
    Basimplcc.generate_intermediate_file()

def Interpreter_Test(file_name, debug=0, outputfile='intermediate.bspl'):

    Basimplcc = CC.Compiler(file_name)
    Basimplcc.DebugState = debug
    Basimplcc.OutputIntermediateFile = outputfile
    print '--------------------------------------GENERATING INTERMEDIATE CODE-----------------------------------'
    Basimplcc.generate_intermediate_file()
    Basimplip = runTime.DummyRunTime(Basimplcc.OutputIntermediateFile)
    Basimplip.DebugFlag = debug
    print '---------------------------------------EXECUTING BYTE CODES------------------------------------------'
    Basimplip.executecode()


def RunTestWithoutDebug():
    inFile1 = 'factorial_iterative.smpl'
    inFile2 = 'factorial_recursive.smpl'
    inFile3 = 'hemachandra_fibonacci.smpl'
    inFile4 = 'sum_of_n.smpl'
    inFile5 = 'multiple_parameters.smpl'

    outFile1 = 'factorial_iterative.bspl'
    outFile2 = 'factorial_recursive.bspl'
    outFile3 = 'hemachandra_fibonacci.bspl'
    outFile4 = 'sum_of_n.bspl'
    outFile5 = 'multiple_parameters.bspl'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile1 + '=======DEBUG MODE: OFF==================INTERMEDIATEFILE:' + outFile1 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile1, 0, outFile1)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile2 + '=======DEBUG MODE: OFF==================INTERMEDIATEFILE:' + outFile2 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile2, 0, outFile2)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile3 + '=======DEBUG MODE: OFF==================INTERMEDIATEFILE:' + outFile3 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile3, 0, outFile3)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile4 + '=======DEBUG MODE: OFF==================INTERMEDIATEFILE:' + outFile4 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile4, 0, outFile4)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile5 + '=======DEBUG MODE: OFF==================INTERMEDIATEFILE:' + outFile5 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile5, 0, outFile5)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

def RunTestWithDebug():
    inFile1 = 'factorial_iterative.smpl'
    inFile2 = 'factorial_recursive.smpl'
    inFile3 = 'hemachandra_fibonacci.smpl'
    inFile4 = 'sum_of_n.smpl'
    inFile5 = 'multiple_parameters.smpl'

    outFile1 = 'factorial_iterative.bspl'
    outFile2 = 'factorial_recursive.bspl'
    outFile3 = 'hemachandra_fibonacci.bspl'
    outFile4 = 'sum_of_n.bspl'
    outFile5 = 'multiple_parameters.bspl'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile1 + '=======DEBUG MODE: ON==================INTERMEDIATEFILE:' + outFile1 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile1, 1, outFile1)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile2 + '=======DEBUG MODE: ON==================INTERMEDIATEFILE:' + outFile2 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile2, 1, outFile2)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile3 + '=======DEBUG MODE: ON==================INTERMEDIATEFILE:' + outFile3 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile3, 1, outFile3)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile4 + '=======DEBUG MODE: ON==================INTERMEDIATEFILE:' + outFile4 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile4, 1, outFile4)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'

    print '\n\n========================================================================================================================================='
    print '==========INPUTFILE: ' + inFile5 + '=======DEBUG MODE: ON==================INTERMEDIATEFILE:' + outFile5 + '============================'
    print '=========================================================================================================================================\n\n'

    Interpreter_Test(inFile5, 1, outFile5)

    print '\n\n========================================================================================================================================='
    print '========================================================END-END-END======================================================================'
    print '=========================================================================================================================================\n\n'


if __name__=='__main__':
    # filename = 'Input_1.txt'
    debug = 0
    inputFile = ''
    intermediateFile = ''
    wrongusage = 0
    ip = interep.SimpleInterpreter()
    if sys.argv.__len__() > 0:
        for arg in sys.argv:
            if arg == 'BaSimPL_Execute.py':
                continue
            if arg.__contains__('debug='):
                split = arg.split('=')
                debug = int(split[1])
                ip.DebugFlag = debug
            elif arg.__contains__('inputfile='):
                split = arg.split('=')
                inputFile = split[1]
                ip.InputFile = inputFile
            elif arg.__contains__('outputfile='):
                split = arg.split('=')
                intermediateFile = split[1]
                ip.IntermediateFile = intermediateFile
            else:
                print 'ERROR:: wrong usage. python BaSimPL_Execute inputfile=filename.smpl debug=1 outputfile=filename.bspl'
                wrongusage = 1

    if wrongusage == 0:
        if inputFile == '':
            ip.runTests()
        else:
            ip = ip.interpret()

    str = 'done'